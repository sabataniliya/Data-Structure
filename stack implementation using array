#include <stdio.h>
#include <stdlib.h>
struct stack{
int size;
int top;
int *arr;
};
int isempty(struct stack *ptr){
    if(ptr->top==-1){
        return 1;
    }
    else{
        return 0;}
}
int isfull(struct stack *ptr){
if(ptr->top==ptr->size-1){
    return 1;
    }
    else{
        return 0;}
}
void push(struct stack *ptr,int val){
if(isfull(ptr)){
        printf("stack overflow");
}
else{
    ptr->top++;
    ptr->arr[ptr->top]=val;
}
}
int pop(struct stack *ptr){
if(isempty(ptr)){
    printf("stack underflow");
    return -1;
}
else{
        int val=ptr->arr[ptr->top];
    ptr->top=ptr->top-1;
return val;
}
}
int main()
{
    struct stack *sp=malloc(sizeof(struct stack));
    sp->size=2;
    sp->arr=(int*)malloc(sp->size*sizeof(int));
    sp->top=-1;
    printf("stack created\n");

    printf("before pushing: %d\n",isfull(sp));
    printf("before pushing: %d\n",isempty(sp));
    push(sp,46);
    push(sp,36);


    printf("after pushing: %d\n",isfull(sp));
    printf("after pushing: %d\n",isempty(sp));

    printf("%d\n",pop(sp));
    return 0;
}

output:
stack created
before pushing: 0
before pushing: 1
after pushing: 1
after pushing: 0
36
